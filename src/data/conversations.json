{
  "conv-1": {
    "id": "conv-1",
    "title": "Introduction to Quantum Computing",
    "messages": [
      {
        "id": "msg-1",
        "role": "user",
        "content": "Can you explain quantum computing in simple terms?",
        "timestamp": "2025-01-15T10:00:00Z"
      },
      {
        "id": "msg-2",
        "role": "assistant",
        "content": "Quantum computing is a revolutionary approach to computation that leverages the principles of quantum mechanics.\n\n## Key Concepts:\n\n1. **Qubits**: Unlike classical bits that are either 0 or 1, quantum bits (qubits) can exist in a superposition of both states simultaneously.\n\n2. **Superposition**: This allows quantum computers to process multiple possibilities at once.\n\n3. **Entanglement**: Qubits can be connected in ways that measuring one instantly affects the other, regardless of distance.\n\n## Simple Analogy:\n\nThink of a classical computer like reading a book page by page, while a quantum computer is like reading all pages simultaneously.\n\n```python\n# Classical bit\nbit = 0  # or 1\n\n# Quantum bit (conceptually)\nqubit = 0.7|0⟩ + 0.3|1⟩  # Probabilistic state\n```\n\nQuantum computers excel at specific tasks like cryptography, drug discovery, and optimization problems.",
        "timestamp": "2025-01-15T10:00:30Z",
        "model": "gpt-4"
      }
    ],
    "createdAt": "2025-01-15T10:00:00Z",
    "updatedAt": "2025-01-15T10:00:30Z",
    "model": "gpt-4"
  },
  "conv-2": {
    "id": "conv-2",
    "title": "Python Data Analysis Help",
    "messages": [
      {
        "id": "msg-3",
        "role": "user",
        "content": "I need help with pandas DataFrame operations",
        "timestamp": "2025-01-14T14:30:00Z"
      },
      {
        "id": "msg-4",
        "role": "assistant",
        "content": "I'll help you with pandas DataFrame operations! Here are the most common and useful operations:\n\n## Creating DataFrames\n\n```python\nimport pandas as pd\n\n# From dictionary\ndf = pd.DataFrame({\n    'name': ['Alice', 'Bob', 'Charlie'],\n    'age': [25, 30, 35],\n    'city': ['NYC', 'LA', 'Chicago']\n})\n```\n\n## Essential Operations\n\n### 1. Selection & Filtering\n```python\n# Select column\ndf['name']\n\n# Select multiple columns\ndf[['name', 'age']]\n\n# Filter rows\ndf[df['age'] > 25]\n```\n\n### 2. Data Manipulation\n```python\n# Add new column\ndf['senior'] = df['age'] > 30\n\n# Group by\ndf.groupby('city')['age'].mean()\n\n# Sort\ndf.sort_values('age', ascending=False)\n```\n\nWhat specific operation would you like to learn more about?",
        "timestamp": "2025-01-14T14:30:45Z",
        "model": "gpt-3.5-turbo"
      }
    ],
    "createdAt": "2025-01-14T14:30:00Z",
    "updatedAt": "2025-01-14T14:30:45Z",
    "model": "gpt-3.5-turbo"
  }
}